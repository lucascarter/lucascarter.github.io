{"ast":null,"code":"import { ref, provide } from 'vue';\nexport default {\n  data() {\n    return {\n      isNavMenuVisible: false\n    };\n  },\n  methods: {\n    toggleNavMenu() {\n      this.isNavMenuVisible = !this.isNavMenuVisible;\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const tabTitles = ref(slots.default().map(tab => tab.props.title));\n    const mainTabTitle = ref(tabTitles.value.shift());\n    let selectedTitle = ref(mainTabTitle.value);\n    provide(\"selectedTitle\", selectedTitle);\n    return {\n      selectedTitle,\n      tabTitles,\n      mainTabTitle\n    };\n  }\n};","map":{"version":3,"names":["ref","provide","data","isNavMenuVisible","methods","toggleNavMenu","setup","props","slots","tabTitles","default","map","tab","title","mainTabTitle","value","shift","selectedTitle"],"sources":["/Users/lucascarter/Documents/GitHub/lucascarter.github.io/src/components/TabsWrapper.vue"],"sourcesContent":["<template>\n    <div class=\"tabs\">\n        <ul class=\"main_tab\">\n            <li :key=\"mainTabTitle\" :class=\"{ selected: selectedTitle == mainTabTitle}\" @click=\"selectedTitle = mainTabTitle\" > {{ mainTabTitle }}</li>\n        </ul>\n        <div id=\"nav-icon\" v-on:click=\"toggleNavMenu\">\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n        <ul id=\"nav-menu\" :class=\"{ 'show-on-mobile': isNavMenuVisible, 'hide-on-mobile': !isNavMenuVisible }\">\n            <ul class=\"tabs_header\">\n            <li\n                v-for=\"title in tabTitles\"\n                :key=\"title\"\n                :class=\"{ selected: selectedTitle == title}\"\n                @click=\"selectedTitle = title; toggleNavMenu()\"\n                >\n                {{ title }}\n            </li>\n        </ul>\n        </ul>\n\n        <slot />\n    </div>\n</template>\n\n<script>\nimport { ref, provide } from 'vue';\nexport default {\n    data() {\n        return {\n            isNavMenuVisible: false\n        };\n    },\n    methods: {\n        toggleNavMenu() {\n            this.isNavMenuVisible = !this.isNavMenuVisible;\n        }\n    },\n    setup (props, { slots }) {\n        const tabTitles = ref(slots.default().map((tab) => tab.props.title));\n        const mainTabTitle = ref(tabTitles.value.shift());\n        let selectedTitle = ref(mainTabTitle.value);\n        provide(\"selectedTitle\", selectedTitle);\n        return {\n            selectedTitle,\n            tabTitles,\n            mainTabTitle\n        }\n    }\n\n}\n</script>\n\n<style scoped>\n.tabs {\n    margin: 0 auto;\n}\n.tabs li:hover {\n    border-bottom: 1px solid black;\n}\n\n.tabs li.selected {\n    border-bottom: 1px solid black;\n}\n\n.tabs_header, .main_tab {\n    margin-bottom: 10px;\n    list-style: none;\n    padding: 0;\n    display: block;\n    align-content: center;\n    max-width: 100%;\n    overflow-wrap: break-word;\n    word-wrap: break-word; /* Break the word at the end of the line */\n    word-break: break-word; /* Break the word at the end of the line */\n\n}\n.main_tab {\n    display: block;\n    margin-top: 1em;\n    margin: 2em;\n}\n.main_tab li {\n    font-size: 5em;\n    font-weight: 200;\n    letter-spacing: 0.2em;\n    padding: 0%;\n    padding-bottom: 5px;\n    border-bottom: 1px solid transparent;\n    transition: 0.4s all ease-out;\n}\n\n.tabs_header li {\n    font-size: 2em;\n    font-weight: 300;\n    padding: 0%;\n    padding-bottom: 5px;\n    margin: 35px;\n    margin-right: 1.2em;\n    margin-left: 1.2em;\n    border-bottom: 1px solid transparent;\n    transition: 0.4s all ease-out;\n}\n\nli {\n    text-align: center;\n    padding: 10px 20px;\n    margin-right: 0px;\n    cursor: pointer;\n    display: inline;\n}\n#nav-icon {\n    cursor: pointer;\n    display: none;\n}\n\n#nav-icon span {\n    display: block;\n    width: 33px;\n    height: 2px;\n    margin-bottom: 5px;\n    margin-top: 5px;\n    background: #000;\n}\n\n#nav-menu {\n    list-style-type: none;\n    padding: 0;\n}\n#nav-menu li:first-child {\n    margin-top: 0;\n}\n\n.hide-on-mobile {\n    display: none;\n}\n/* Media query for mobile devices */\n@media (max-width: 768px) {\n    .tabs {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    .main_tab li {\n        font-size: 3em; /* Adjust font size */\n        align-content: center;\n    }\n    .tabs_header li {\n        font-size: 2em;\n    }\n\n    li {\n        padding: 5px 10px; /* Adjust padding */\n        display: block;\n    }\n\n    .main_tab, .tabs_header {\n        margin: 1em; /* Adjust margin */\n    }\n    #nav-icon {\n        display: block;\n    }\n    #nav-menu.hide-on-mobile {\n        display: none;\n    }\n    #nav-menu.show-on-mobile {\n        display: block;\n    }\n}\n\n\n</style>"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,OAAM,QAAS,KAAK;AAClC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,gBAAgB,EAAE;IACtB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACF,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAClD;EACJ,CAAC;EACDG,KAAIA,CAAGC,KAAK,EAAE;IAAEC;EAAM,CAAC,EAAE;IACrB,MAAMC,SAAQ,GAAIT,GAAG,CAACQ,KAAK,CAACE,OAAO,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACL,KAAK,CAACM,KAAK,CAAC,CAAC;IACpE,MAAMC,YAAW,GAAId,GAAG,CAACS,SAAS,CAACM,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC;IACjD,IAAIC,aAAY,GAAIjB,GAAG,CAACc,YAAY,CAACC,KAAK,CAAC;IAC3Cd,OAAO,CAAC,eAAe,EAAEgB,aAAa,CAAC;IACvC,OAAO;MACHA,aAAa;MACbR,SAAS;MACTK;IACJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}