{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tabs\"\n};\nconst _hoisted_2 = {\n  class: \"tabs_header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tabTitles, title => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: title\n    }, _toDisplayString(title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _renderSlot(_ctx.$slots, \"default\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","tabTitles","title","key","_toDisplayString","_renderSlot","_ctx","$slots"],"sources":["/Users/lucascarter/Documents/GitHub/lucascarter.github.io/src/components/TabsWrapper.vue"],"sourcesContent":["<template>\n    <div class=\"tabs\">\n        <ul class=\"tabs_header\">\n            <li v-for=\"title in tabTitles\" :key=\"title\">\n                {{ title }}\n            </li>\n        </ul>\n        <slot />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nexport default {\n    setup (props, { slots }) {\n        const tabTitles = ref(slots.default().map((tab) => tab.props.title));\n        return {\n            tabTitles\n        }\n    }\n\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EACTA,KAAK,EAAC;AAAa;;uBAD3BC,mBAAA,CAOM,OAPNC,UAOM,GANFC,mBAAA,CAIK,MAJLC,UAIK,I,kBAHDH,mBAAA,CAEKI,SAAA,QAAAC,WAAA,CAFeC,MAAA,CAAAC,SAAS,EAAlBC,KAAK;yBAAhBR,mBAAA,CAEK;MAF2BS,GAAG,EAAED;IAAK,GAAAE,gBAAA,CACnCF,KAAK;oCAGhBG,WAAA,CAAQC,IAAA,CAAAC,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}