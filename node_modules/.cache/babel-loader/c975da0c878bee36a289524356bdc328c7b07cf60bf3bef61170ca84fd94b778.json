{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/code_demos/froyo/FroyoStartScreen.png';\nimport _imports_1 from '../assets/code_demos/froyo/FroyoGameScreen.png';\nimport _imports_2 from '../assets/code_demos/froyo/FroyoOthello.png';\nimport _imports_3 from '../assets/code_demos/froyo/FroyoCheckers.png';\nimport _imports_4 from '../assets/code_demos/froyo/FroyoConnect4.png';\nimport _imports_5 from '../assets/LucasHeadshotCircle.png';\nconst _hoisted_1 = {\n  class: \"outer-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"project\\\" id=\\\"froyo\\\"><div class=\\\"left\\\"><img src=\\\"\" + _imports_0 + \"\\\" id=\\\"froyo-start\\\"><img src=\\\"\" + _imports_1 + \"\\\" id=\\\"froyo-game\\\"></div><div class=\\\"middle\\\"><h1>FROYO GAMES</h1><ul class=\\\"code-description\\\"><li>A Java application that allows users to play Othello, Checkers, and Connect 4</li><li>Three modes for each game <ul><li>One Player versus an AI that uses minmax</li><li>Two Player local, in which the same input device and computer is used by both players</li><li>Two Player online, in which players can play against each other different devices (uses Firebase, now deprecated)</li></ul></li><li>Users can choose between three languages for the application when first opening it</li><li>Worked on a team of five across various time zones, using Scrum methodology</li><li>Used an MVC project structure while following SOLID design principles and incorporating OOP design patterns</li></ul></div><div class=\\\"right\\\"><img src=\\\"\" + _imports_2 + \"\\\" id=\\\"froyo-othello\\\"><img src=\\\"\" + _imports_3 + \"\\\" id=\\\"froyo-checkers\\\"><img src=\\\"\" + _imports_4 + \"\\\" id=\\\"froyo-connect\\\"></div></div><div class=\\\"project\\\" id=\\\"amazon\\\"><div class=\\\"left\\\"><img src=\\\"\" + _imports_5 + \"\\\" id=\\\"my-photo\\\"></div><div class=\\\"middle\\\"><h1>MINI AMAZON</h1><p>This is where project descriptions will go. They&#39;ll include the stack used, as well as what the project does and the features if any.</p></div><div class=\\\"right\\\"><img src=\\\"\" + _imports_5 + \"\\\" id=\\\"my-photo\\\"></div></div><div class=\\\"project\\\" id=\\\"spotify\\\"><div class=\\\"left\\\"><img src=\\\"\" + _imports_5 + \"\\\" id=\\\"my-photo\\\"></div><div class=\\\"middle\\\"><h1>SPOTIFY SORTER</h1><p>This is where project descriptions will go. They&#39;ll include the stack used, as well as what the project does and the features if any.</p></div><div class=\\\"right\\\"><img src=\\\"\" + _imports_5 + \"\\\" id=\\\"my-photo\\\"></div></div><div class=\\\"project\\\" id=\\\"french\\\"><div class=\\\"left\\\"><img src=\\\"\" + _imports_5 + \"\\\" id=\\\"my-photo\\\"></div><div class=\\\"middle\\\"><h1>FRENCH FLASH CARD MAKER</h1><p>This is where project descriptions will go. They&#39;ll include the stack used, as well as what the project does and the features if any.</p></div><div class=\\\"right\\\"><img src=\\\"\" + _imports_5 + \"\\\" id=\\\"my-photo\\\"></div></div>\", 4);\nconst _hoisted_6 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_6);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","_imports_5","class","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_6"],"sources":["/Users/lucascarter/Documents/GitHub/lucascarter.github.io/src/components/CodePage.vue"],"sourcesContent":["<template>\n  <div class=\"outer-container\">\n    <div class=\"project\" id=\"froyo\">\n      <div class=\"left\">\n        <img src=\"../assets/code_demos/froyo/FroyoStartScreen.png\" id=\"froyo-start\"/>\n        <img src=\"../assets/code_demos/froyo/FroyoGameScreen.png\" id=\"froyo-game\"/>\n      </div>\n      <div class=\"middle\">\n        <h1>FROYO GAMES</h1>\n        <ul class=\"code-description\">\n          <li>A Java application that allows users to play Othello, Checkers, and Connect 4</li>\n          <li>Three modes for each game\n            <ul>\n              <li>One Player versus an AI that uses minmax</li>\n              <li>Two Player local, in which the same input device and computer is used by both players</li>\n              <li>Two Player online, in which players can play against each other different devices (uses Firebase, now deprecated)</li>\n            </ul>\n          </li>\n          <li>Users can choose between three languages for the application when first opening it</li>\n          <li>Worked on a team of five across various time zones, using Scrum methodology</li>\n          <li>Used an MVC project structure while following SOLID design principles and incorporating OOP design patterns</li>\n        </ul>\n      </div>\n      <div class=\"right\">\n        <img src=\"../assets/code_demos/froyo/FroyoOthello.png\" id=\"froyo-othello\"/>\n        <img src=\"../assets/code_demos/froyo/FroyoCheckers.png\" id=\"froyo-checkers\"/>\n        <img src=\"../assets/code_demos/froyo/FroyoConnect4.png\" id=\"froyo-connect\"/>\n      </div>\n    </div>\n    <div class=\"project\" id=\"amazon\">\n      <div class=\"left\">\n        <img src=\"../assets/LucasHeadshotCircle.png\" id=\"my-photo\"/>\n      </div>\n      <div class=\"middle\">\n        <h1>MINI AMAZON</h1>\n        <p>This is where project descriptions will go. They'll include the stack used, as well as what the project does and the features if any.</p>\n      </div>\n      <div class=\"right\">\n        <img src=\"../assets/LucasHeadshotCircle.png\" id=\"my-photo\"/>\n      </div>\n    </div>\n    <div class=\"project\" id=\"spotify\">\n      <div class=\"left\">\n        <img src=\"../assets/LucasHeadshotCircle.png\" id=\"my-photo\"/>\n      </div>\n      <div class=\"middle\">\n        <h1>SPOTIFY SORTER</h1>\n        <p>This is where project descriptions will go. They'll include the stack used, as well as what the project does and the features if any.</p>\n      </div>\n      <div class=\"right\">\n        <img src=\"../assets/LucasHeadshotCircle.png\" id=\"my-photo\"/>\n      </div>\n    </div>\n    <div class=\"project\" id=\"french\">\n      <div class=\"left\">\n        <img src=\"../assets/LucasHeadshotCircle.png\" id=\"my-photo\"/>\n      </div>\n      <div class=\"middle\">\n        <h1>FRENCH FLASH CARD MAKER</h1>\n        <p>This is where project descriptions will go. They'll include the stack used, as well as what the project does and the features if any.</p>\n      </div>\n      <div class=\"right\">\n        <img src=\"../assets/LucasHeadshotCircle.png\" id=\"my-photo\"/>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n\n\n<style>\n\n.project {\n  margin: auto;\n  display: flex;\n  padding: 2em\n}\n\n.left {\n  text-align: right;\n}\n.middle {\n  padding-left: 3em;\n  padding-right: 3em;\n}\n.right {\n  text-align: left;\n}\n\n#froyo-start {\n  height: 7em;\n}\n#froyo-game {\n  height: 15em;\n}\n\n#froyo-othello {\n  height: 10em;\n}\n#froyo-checkers {\n  height: 10em;\n}\n#froyo-connect {\n  height: 10em;\n}\n\nul {\n  text-align: left;\n}\n\n</style>"],"mappings":";OAIaA,UAAqD;OACrDC,UAAoD;OAmBpDC,UAAiD;OACjDC,UAAkD;OAClDC,UAAkD;OAKlDC,UAAuC;;EA9B7CC,KAAK,EAAC;AAAiB;;oBAC1BC,UA0BM,C;;uBA3BRC,mBAAA,CAiEM,OAjENC,UAiEM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}